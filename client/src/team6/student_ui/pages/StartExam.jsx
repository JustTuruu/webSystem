import { Link, useParams, useNavigate } from 'react-router-dom';
import { mockExams, mockStudentExams, mockQuestionBank, getRandomQuestions } from '../../data/mockData';
import { useState } from 'react';

const StartExam = () => {
  const { exam_id, student_id } = useParams();
  const navigate = useNavigate();
  const [randomQuestions, setRandomQuestions] = useState(null);
  
  const exam = mockExams.find(e => e.id === parseInt(exam_id));
  const studentExam = mockStudentExams.find(
    se => se.examId === parseInt(exam_id) && se.studentId === parseInt(student_id)
  ); 

  if (!exam || !studentExam) {
    return (
      <div className="min-h-screen bg-gray-50 p-6 flex items-center justify-center">
        <div className="text-center">
          <div className="text-6xl mb-4">‚ùå</div>
          <h2 className="text-2xl font-bold text-gray-900 mb-2">–®–∞–ª–≥–∞–ª—Ç –æ–ª–¥—Å–æ–Ω–≥“Ø–π</h2>
          <Link to="/team6/student" className="text-black hover:underline">
            –ë—É—Ü–∞—Ö
          </Link>
        </div>
      </div>
    );
  }

  const handleStartExam = () => {
    // –°–∞–Ω–∞–º—Å–∞—Ä–≥“Ø–π 7 –∞—Å—É—É–ª—Ç —Å–æ–Ω–≥–æ—Ö
    const selectedQuestions = getRandomQuestions();
    console.log('‚úÖ Selected 7 questions:', selectedQuestions);
    
    // –ê—Å—É—É–ª—Ç—É—É–¥—ã–Ω —Ç”©—Ä–ª–∏–π–≥ —à–∞–ª–≥–∞—Ö
    const questionDetails = selectedQuestions.map(id => {
      const q = mockQuestionBank.find(question => question.id === id);
      return { 
        id, 
        type: q?.type, 
        hasImage: !!q?.image,
        question: q?.question?.substring(0, 30) + '...'
      };
    });
    console.log('üìä Question types:', questionDetails);
    
    // SessionStorage-–¥ —Ö–∞–¥–≥–∞–ª–∞—Ö
    sessionStorage.setItem(`exam_${exam_id}_questions`, JSON.stringify(selectedQuestions));
    console.log('üíæ Saved to sessionStorage:', `exam_${exam_id}_questions`);
    
    // TakeExam —Ö—É—É–¥–∞—Å —Ä—É—É —à–∏–ª–∂–∏—Ö
    navigate(`/team6/student/exams/${exam_id}/students/${student_id}/edit`);
  };

  const formatDate = (dateString) => {
    const date = new Date(dateString);
    return date.toLocaleString('mn-MN', {
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit',
    });
  };

  return (
    <div className="min-h-screen bg-gray-50 flex items-center justify-center p-6">
      <div className="max-w-2xl w-full">
        {/* Back Button */}
        <div className="mb-4 text-center">
          <Link
            to="/team6/student"
            className="text-gray-600 hover:text-gray-900 inline-flex items-center gap-2"
          >
            ‚Üê –ù“Ø“Ø—Ä —Ö—É—É–¥–∞—Å —Ä—É—É –±—É—Ü–∞—Ö
          </Link>
        </div>

        <div className="bg-white rounded-lg shadow-lg border border-gray-200 overflow-hidden">
          {/* Header */}
          <div className="bg-black text-white p-8 text-center">
            <div className="text-5xl mb-4">üìù</div>
            <h1 className="text-3xl font-bold mb-2">{exam.title}</h1>
            <p className="text-gray-300">{exam.description}</p>
          </div>

          {/* Content */}
          <div className="p-8">
            <div className="space-y-6 mb-8">
              <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <span className="text-gray-600 font-medium">–≠—Ö–ª—ç—Ö —Ü–∞–≥:</span>
                <span className="font-semibold text-gray-900">{formatDate(exam.startDate)}</span>
              </div>
              <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <span className="text-gray-600 font-medium">“Æ—Ä–≥—ç–ª–∂–ª—ç—Ö —Ö—É–≥–∞—Ü–∞–∞:</span>
                <span className="font-semibold text-gray-900">{exam.duration} –º–∏–Ω—É—Ç</span>
              </div>
              <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <span className="text-gray-600 font-medium">–ù–∏–π—Ç –æ–Ω–æ–æ:</span>
                <span className="font-semibold text-gray-900">{exam.totalMarks}</span>
              </div>
              <div className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <span className="text-gray-600 font-medium">–¢—ç–Ω—Ü—ç—Ö –æ–Ω–æ–æ:</span>
                <span className="font-semibold text-gray-900">{exam.passingMarks}</span>
              </div>
            </div>

            {/* Instructions */}
            <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6 mb-8">
              <h3 className="font-bold text-gray-900 mb-3">üìå –ê–Ω—Ö–∞–∞—Ä–∞—Ö –∑“Ø–π–ª—Å:</h3>
              <ul className="space-y-2 text-sm text-gray-700">
                <li className="flex items-start gap-2">
                  <span className="text-yellow-600">‚Ä¢</span>
                  <span>–®–∞–ª–≥–∞–ª—Ç —ç—Ö—ç–ª—Å–Ω–∏–π –¥–∞—Ä–∞–∞ —Ç–æ–≥—Ç–æ–æ—Å–æ–Ω —Ö—É–≥–∞—Ü–∞–∞–Ω–¥ –¥—É—É—Å–≥–∞—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π</span>
                </li>
                <li className="flex items-start gap-2">
                  <span className="text-yellow-600">‚Ä¢</span>
                  <span>–•–∞—Ä–∏—É–ª—Ç–∞–∞ –æ—Ä—É—É–ª—Å–Ω—ã –¥–∞—Ä–∞–∞ "–î–∞—Ä–∞–∞–≥–∏–π–Ω—Ö" —Ç–æ–≤—á–∏–π–≥ –¥–∞—Ä–Ω–∞ —É—É</span>
                </li>
                <li className="flex items-start gap-2">
                  <span className="text-yellow-600">‚Ä¢</span>
                  <span>–ë“Ø—Ö –∞—Å—É—É–ª—Ç–∞–¥ —Ö–∞—Ä–∏—É–ª—Å–Ω—ã –¥–∞—Ä–∞–∞ "–î—É—É—Å–≥–∞—Ö" —Ç–æ–≤—á–∏–π–≥ –¥–∞—Ä–Ω–∞ —É—É</span>
                </li>
                <li className="flex items-start gap-2">
                  <span className="text-yellow-600">‚Ä¢</span>
                  <span>–®–∞–ª–≥–∞–ª—Ç –¥—É—É—Å—Å–∞–Ω—ã –¥–∞—Ä–∞–∞ ”©”©—Ä—á–ª”©–ª—Ç —Ö–∏–π—Ö –±–æ–ª–æ–º–∂–≥“Ø–π</span>
                </li>
              </ul>
            </div>

            {/* Actions */}
            {studentExam.status === 'not_started' ? (
              <div className="flex gap-4">
                <Link
                  to="/team6/student"
                  className="flex-1 px-6 py-4 text-center border border-gray-300 rounded-lg font-medium text-gray-700 hover:bg-gray-50 transition-colors"
                >
                  –ë—É—Ü–∞—Ö
                </Link>
                <button
                  onClick={handleStartExam}
                  className="flex-1 px-6 py-4 bg-black text-white rounded-lg font-medium hover:bg-gray-800 transition-colors"
                >
                  –®–∞–ª–≥–∞–ª—Ç —ç—Ö–ª“Ø“Ø–ª—ç—Ö
                </button>
              </div>
            ) : (
              <div className="text-center">
                <div className="text-yellow-600 mb-4">
                  ‚ö†Ô∏è –¢–∞ —ç–Ω—ç —à–∞–ª–≥–∞–ª—Ç—ã–≥ –∞–ª—å —Ö—ç–¥–∏–π–Ω —ç—Ö–ª“Ø“Ø–ª—Å—ç–Ω –±–∞–π–Ω–∞
                </div>
                <Link
                  to={`/team6/student/exams/${exam_id}/students/${student_id}/result`}
                  className="inline-block px-6 py-3 bg-black text-white rounded-lg hover:bg-gray-800 transition-colors"
                >
                  “Æ—Ä –¥“Ø–Ω —Ö–∞—Ä–∞—Ö
                </Link>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default StartExam;
